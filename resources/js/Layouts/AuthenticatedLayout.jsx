import { Link, usePage, router } from '@inertiajs/react';
import React, { useEffect, useState } from 'react';
import {
    Sidebar,
    SidebarBody,
    SidebarLink,
} from '@/Components/Dashboard/dashboard';
import { IconArrowLeft } from '@tabler/icons-react';
import { motion } from 'framer-motion';
import { cn } from '@/lib/utils';
import Navbar from '@/Components/Dashboard/navbar';
import { PiArmchairFill, PiNotebookBold } from 'react-icons/pi';
import { MdDashboard, MdOutlineBedroomParent, MdOutlineEmojiTransportation, MdOutlineHouseSiding } from 'react-icons/md';
import { SiGoogleclassroom } from 'react-icons/si';
import { FaRegFlag } from 'react-icons/fa';
import { LuLandPlot, LuPencilRuler, LuSchool, LuUsers } from 'react-icons/lu';
import { RiShieldKeyholeLine } from 'react-icons/ri';
import { HiOutlineUserGroup } from 'react-icons/hi';
import { useTranslation } from 'react-i18next';
import { onError, onSuccess } from '@/lib/appAlert';
import { TbReport } from 'react-icons/tb';
import { usePermission } from '@/Hooks/usePermission';
import { FaBullhorn } from 'react-icons/fa6';
import { useTour } from '@/context/TourProvider';
import { Button } from '@headlessui/react';
import PerfectScrollbar from 'react-perfect-scrollbar';
import { GrMapLocation } from 'react-icons/gr';
import { BsFillBuildingsFill } from 'react-icons/bs';

export default function Authenticated({ header, children }) {
    const { hasPermission } = usePermission();
    const { flash, auth } = usePage().props;

    useEffect(() => {
        if (flash?.success || flash?.message || flash?.error) {
            if (flash?.success || flash?.message) {
                onSuccess(flash?.success || flash?.message);
            } else if (flash?.error) {
                onError(flash?.error);
            }
        }
    }, [flash]);

    const { t, i18n } = useTranslation();

    const [fontClass, setFontClass] = useState('font-poppins');

    useEffect(() => {
        switch (i18n.language) {
            case 'fa':
                setFontClass('font-iran-sans');
                break;
            default:
                setFontClass('font-poppins');
                break;
        }
    }, [i18n.language]);

    const items = [
        {
            id: 'dashboard',
            label: 'dashboard',
            icon: <MdDashboard className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'countries',
            id: 'countries',
            icon: <FaRegFlag className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'campuses',
            id: 'campuses',
            icon: <GrMapLocation className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'educational-institutions',
            id: 'educational-institutions',
            icon: <LuSchool className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'lands',
            id: 'lands',
            icon: <LuLandPlot className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'buildings',
            id: 'buildings',
            icon: <BsFillBuildingsFill className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'floors',
            id: 'floors',
            icon: <MdOutlineHouseSiding className=" h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'rooms',
            id: 'rooms',
            icon: <MdOutlineBedroomParent className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'fixture-furnishings',
            id: 'fixture-furnishings',
            icon: <PiArmchairFill className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'educational-materials',
            id: 'educational-materials',
            icon: <LuPencilRuler className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'asset-transfer',
            id: 'asset-transfer',
            icon: <MdOutlineEmojiTransportation className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'users',
            id: 'users',
            icon: <LuUsers className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'roles',
            id: 'roles',
            icon: <HiOutlineUserGroup className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'permissions',
            id: 'permissions',
            icon: <RiShieldKeyholeLine className="  h-5 w-5 flex-shrink-0" />,
        },
        {
            label: 'reports',
            id: 'reports',
            icon: <TbReport className="  h-5 w-5 flex-shrink-0" />,
            children: [],
        },
        {
            label: 'activity-log',
            id: 'activity-log',
            icon: <FaBullhorn className="  h-5 w-5 flex-shrink-0" />,
        },
    ];

    const links = [
        ...items
            .filter(item => hasPermission(`${item.id} read`))
            .map(item => ({
                id: item.id,
                label: t(item.label),
                href: `/${item.label}`,
                icon: item.icon,
                children: item?.children
                    ? item.children.map(child => ({
                        label: t(child.label),
                        href: `/admin/${item.label}/${child.label}`,
                        icon: child.icon,
                    }))
                    : null,
            })),

        {
            label: t('logout'),
            href: route('logout'), // Assuming you have a named route for logout
            icon: (
                <IconArrowLeft className="text-neutral-700 dark:text-neutral-200 h-5 w-5 flex-shrink-0" />
            ),
            onClick: e => {
                e.preventDefault();
                router.post(route('logout'));
            },
        },
    ];

    const [open, setOpen] = useState(false);
    // const { startTour, tourCompleted, resetTour, setIsLoggedIn, setUserRole } =
    //     useTour();

    // useEffect(() => {
    //     setIsLoggedIn(true);
    // }, []);

    // useEffect(() => {
    //     setUserRole(auth.roles && auth.roles[0]);
    // }, [auth.roles]);

    return (
        <>
            <div
                id="welcome"
                className={cn(
                    'rounded-md  flex flex-col md:flex-row bg-white dark:bg-neutral-800 w-full flex-1  mx-auto  dark:border-neutral-700',
                    fontClass
                    // "h-[100vh]" // for your use case, use `h-screen` instead of `h-[60vh]`
                )}
            >
                <Sidebar open={open} setOpen={setOpen}>
                    <SidebarBody className="justify-between gap-10 ">
                        <div id="step1" className="flex flex-col flex-1">
                            <Logo />
                            <PerfectScrollbar>
                                <div className="mt-4 flex flex-col gap-2 h-[86vh] ">
                                    {links.map((link, idx) => (
                                        <SidebarLink key={idx} link={link} />
                                    ))}
                                </div>
                            </PerfectScrollbar>
                        </div>
                        {/* <div className="absolute right-0 bottom-0">
                            <Button
                                onClick={tourCompleted ? resetTour : startTour}
                                className="hover:text-brand text-gray-400"
                            >
                                Start Tour
                            </Button>
                        </div> */}
                    </SidebarBody>
                </Sidebar>

                <Dashboard>{children}</Dashboard>
            </div>
        </>
    );
}
export const Logo = ({ hideLabel }) => {
    const { t } = useTranslation();
    return (
        <a
            href="/"
            className="font-normal flex gap-x-2 items-center text-sm text-black py-1 relative z-20"
        >
            <div className="h-10 w-10 flex-shrink-0">
                <svg
                    className="h-10 w-10  rounded-br-lg rounded-tr-sm rounded-tl-lg rounded-bl-sm flex-shrink-0"
                    version="1.1"
                    id="Layer_1"
                    xmlns="http://www.w3.org/2000/svg"
                    xmlnsXlink="http://www.w3.org/1999/xlink"
                    x="0px"
                    y="0px"
                    viewBox="0 0 66.55 66.55"
                    xmlSpace="preserve"
                >
                    <style
                        type="text/css"
                        dangerouslySetInnerHTML={{
                            __html: '\n\t.st0{fill:#00adbb;}\n',
                        }}
                    />
                    <path
                        className="st0"
                        d="M64.69,41.49c-0.11-0.11-0.22-0.22-0.33-0.33c-2.49-2.49-4.98-4.98-7.47-7.47c-0.1-0.1-0.2-0.2-0.29-0.3  c-0.08-0.08-0.07-0.15,0.01-0.24c0.09-0.09,0.17-0.18,0.26-0.26c2.05-2.05,4.1-4.1,6.15-6.15c0.52-0.52,1.03-1.03,1.54-1.55  c0.05-0.05,0.11-0.11,0.15-0.18c0.01-0.02,0.01-0.07,0-0.09c-0.09-0.11-0.18-0.21-0.28-0.31c-1.69-1.69-3.38-3.38-5.06-5.07  c-1.58-1.58-3.16-3.16-4.74-4.74c-0.09-0.09-0.18-0.17-0.27-0.25c-0.03-0.03-0.09-0.04-0.13,0c-0.09,0.08-0.18,0.17-0.27,0.25  c-0.61,0.61-1.22,1.23-1.84,1.85c-2.62,2.62-5.24,5.24-7.86,7.86c-0.1,0.1-0.2,0.2-0.29,0.3c-0.12,0.12-0.12,0.17,0.02,0.31  c0.01,0.01,0.02,0.02,0.03,0.03c0.94,0.94,1.89,1.89,2.83,2.83c0.04,0.04,0.09,0.08,0.14,0.12c0.02,0.01,0.07,0.01,0.08,0  c0.12-0.1,0.23-0.21,0.34-0.31c2.16-2.16,4.32-4.32,6.48-6.48c0.1-0.1,0.2-0.2,0.3-0.29c0.08-0.08,0.15-0.07,0.24,0.01  c0.06,0.05,0.11,0.11,0.17,0.16c1.17,1.17,2.35,2.35,3.52,3.52c0.07,0.07,0.13,0.14,0.18,0.21c0.01,0.02,0.01,0.07,0,0.09  c-0.04,0.06-0.1,0.12-0.15,0.18c-0.36,0.36-0.72,0.72-1.09,1.09c-1.49,1.49-2.98,2.98-4.47,4.47c-0.3,0.3-0.24,0.26-0.6,0.26  c-3.38,0-6.76,0-10.14,0c-0.06,0-0.12,0-0.19,0c-0.08,0-0.15-0.02-0.21-0.08c-0.06-0.05-0.11-0.11-0.17-0.16  c-1.81-1.81-3.62-3.62-5.43-5.43c-0.28-0.28-0.26-0.21-0.26-0.65c0-1.67,0-3.35,0-5.02c0-1.05,0-2.11,0-3.16c0-0.68,0-1.36,0-2.05  c0-0.17,0.04-0.3,0.17-0.41c0.06-0.05,0.11-0.11,0.17-0.16c1.78-1.78,3.55-3.55,5.33-5.33c0.08-0.08,0.15-0.15,0.23-0.23  c0.02-0.02,0.05-0.04,0.07-0.06c0.03-0.02,0.1-0.02,0.13,0.01c0.27,0.26,0.53,0.52,0.8,0.78c0.95,0.95,1.91,1.91,2.86,2.86  c0.09,0.09,0.17,0.18,0.26,0.27c0.05,0.05,0.04,0.11-0.01,0.16c-0.1,0.1-0.19,0.2-0.29,0.3c-2.14,2.14-4.28,4.28-6.41,6.41  c-0.1,0.1-0.2,0.2-0.3,0.3c-0.03,0.03-0.06,0.07-0.09,0.1c-0.04,0.05-0.04,0.11,0.01,0.16c0.07,0.08,0.15,0.16,0.23,0.23  c0.84,0.84,1.69,1.69,2.53,2.53c0.11,0.11,0.2,0.24,0.34,0.31c0.17-0.06,0.26-0.21,0.38-0.32c3.04-3.04,6.08-6.07,9.11-9.11  c0.27-0.27,0.55-0.55,0.82-0.82c0.04-0.04,0.09-0.09,0.12-0.14c0.01-0.02,0.01-0.07-0.01-0.08c-0.1-0.12-0.21-0.23-0.32-0.34  c-3.23-3.24-6.47-6.47-9.7-9.7c-0.09-0.09-0.17-0.18-0.26-0.26c-0.11-0.11-0.16-0.11-0.27,0c-0.1,0.1-0.2,0.2-0.3,0.29  c-2.48,2.48-4.96,4.96-7.43,7.44c-0.11,0.11-0.22,0.22-0.33,0.33c-0.06,0.06-0.15,0.07-0.21,0.01c-0.11-0.11-0.22-0.22-0.33-0.33  c-2.49-2.49-4.98-4.98-7.47-7.47c-0.1-0.1-0.2-0.2-0.3-0.29c-0.02-0.02-0.05-0.04-0.08-0.05c-0.03-0.01-0.07-0.01-0.09,0.01  c-0.09,0.08-0.19,0.16-0.27,0.25c-3.28,3.28-6.56,6.56-9.84,9.84c-0.37,0.37-0.35,0.31,0.01,0.67c3.28,3.28,6.56,6.56,9.83,9.84  c0.08,0.08,0.16,0.15,0.23,0.23c0.03,0.03,0.1,0.03,0.13,0.01c0.05-0.04,0.1-0.08,0.14-0.12c0.94-0.94,1.89-1.89,2.83-2.83  c0.04-0.04,0.09-0.09,0.12-0.14c0.01-0.02,0.02-0.06,0.01-0.08c-0.04-0.06-0.09-0.12-0.15-0.18c-0.4-0.41-0.81-0.81-1.22-1.22  c-1.82-1.82-3.63-3.63-5.45-5.45c-0.11-0.11-0.21-0.22-0.32-0.34c-0.04-0.04-0.02-0.09,0-0.13c0.06-0.07,0.12-0.14,0.19-0.21  c1.18-1.18,2.37-2.37,3.55-3.55c0.05-0.05,0.11-0.11,0.17-0.16c0.03-0.03,0.1-0.03,0.13-0.01c0.06,0.05,0.12,0.1,0.17,0.15  c1.86,1.86,3.73,3.73,5.59,5.59c0.04,0.04,0.09,0.09,0.13,0.13c0.05,0.06,0.09,0.12,0.09,0.21c0,0.08,0,0.16,0,0.23  c0,3.38,0,6.76,0,10.14c0,0.33,0.03,0.31-0.23,0.57c-0.03,0.03-0.07,0.07-0.1,0.1c-1.77,1.77-3.53,3.53-5.3,5.3  c-0.39,0.39-0.26,0.32-0.81,0.32c-3.3,0-6.61,0-9.91,0c-0.53,0-0.4,0.06-0.8-0.34c-1.79-1.79-3.57-3.58-5.36-5.36  c-0.08-0.08-0.15-0.15-0.23-0.23c-0.06-0.06-0.06-0.14,0-0.21c0.04-0.05,0.08-0.09,0.13-0.13c1.19-1.2,2.39-2.39,3.58-3.59  c0.05-0.05,0.11-0.11,0.17-0.16c0.04-0.04,0.09-0.03,0.13-0.01c0.06,0.04,0.12,0.1,0.17,0.15c0.37,0.37,0.75,0.75,1.12,1.12  c1.87,1.88,3.75,3.75,5.62,5.63c0.08,0.08,0.16,0.15,0.24,0.22c0.03,0.03,0.1,0.03,0.13,0c0.05-0.04,0.09-0.08,0.14-0.12  c0.93-0.93,1.86-1.86,2.8-2.8c0.02-0.02,0.04-0.04,0.07-0.07c0.11-0.12,0.12-0.17,0.02-0.27c-0.1-0.1-0.2-0.2-0.29-0.3  c-2.27-2.27-4.54-4.54-6.81-6.81c-1.02-1.02-2.04-2.04-3.06-3.06c-0.18-0.18-0.21-0.18-0.38-0.02c-0.09,0.09-0.18,0.17-0.26,0.26  c-2.11,2.12-4.23,4.24-6.34,6.35c-1.11,1.11-2.21,2.22-3.32,3.32c-0.09,0.09-0.17,0.18-0.26,0.27c-0.06,0.06-0.06,0.15-0.01,0.21  c0.11,0.11,0.22,0.22,0.33,0.33c2.49,2.49,4.98,4.98,7.47,7.47c0.09,0.09,0.18,0.17,0.26,0.26c0.11,0.12,0.12,0.17,0.02,0.27  c-0.05,0.06-0.11,0.11-0.16,0.17c-0.73,0.73-1.47,1.47-2.2,2.2c-1.82,1.82-3.64,3.64-5.46,5.46c-0.09,0.09-0.17,0.18-0.26,0.27  c-0.05,0.05-0.05,0.12-0.01,0.16c0.07,0.08,0.15,0.16,0.22,0.23c3.29,3.29,6.58,6.58,9.87,9.87c0.08,0.08,0.16,0.15,0.23,0.23  c0.04,0.04,0.12,0.04,0.17-0.01c0.11-0.11,0.22-0.22,0.33-0.33c3.22-3.22,6.45-6.45,9.67-9.67c0.08-0.08,0.15-0.15,0.23-0.23  c0.03-0.03,0.06-0.07,0.09-0.11c0.03-0.03,0.03-0.1,0-0.13c-0.05-0.06-0.1-0.12-0.16-0.17c-0.9-0.9-1.8-1.8-2.7-2.7  c-0.05-0.05-0.11-0.11-0.17-0.16c-0.06-0.06-0.15-0.06-0.21-0.01c-0.11,0.11-0.22,0.22-0.33,0.33c-2.15,2.15-4.3,4.3-6.45,6.45  c-0.11,0.11-0.22,0.22-0.34,0.32c-0.03,0.03-0.1,0.03-0.13,0c-0.08-0.07-0.16-0.15-0.24-0.22c-1.15-1.15-2.3-2.3-3.45-3.45  c-0.07-0.07-0.13-0.13-0.2-0.2c-0.02-0.02-0.04-0.05-0.05-0.08c-0.01-0.03-0.01-0.07,0.01-0.08c0.09-0.11,0.18-0.21,0.28-0.31  c1.18-1.19,2.37-2.37,3.55-3.55c0.65-0.65,1.3-1.29,1.94-1.94c0.12-0.12,0.24-0.19,0.41-0.17c0.09,0.01,0.19,0,0.28,0  c3.29,0,6.58,0,9.86,0c0.11,0,0.22,0,0.33,0c0.13,0,0.24,0.03,0.33,0.13c0.07,0.08,0.15,0.15,0.23,0.23  c1.74,1.74,3.49,3.49,5.23,5.23c0.07,0.07,0.13,0.13,0.2,0.2c0.09,0.09,0.15,0.19,0.14,0.33c-0.01,0.08,0,0.15,0,0.23  c0,3.33,0,6.67,0,10c0,0.09,0,0.19,0,0.28c0,0.08-0.04,0.15-0.09,0.21c-0.09,0.1-0.19,0.2-0.29,0.3c-1.29,1.29-2.59,2.59-3.88,3.88  c-0.47,0.47-0.94,0.94-1.41,1.41c-0.09,0.09-0.18,0.17-0.27,0.26c-0.05,0.04-0.13,0.05-0.17,0.01c-0.09-0.08-0.18-0.17-0.27-0.26  c-1.12-1.12-2.24-2.24-3.36-3.36c-0.41-0.41-0.41-0.32,0.01-0.74c1.81-1.81,3.62-3.62,5.43-5.43c0.42-0.42,0.83-0.83,1.25-1.25  c0.05-0.05,0.11-0.11,0.15-0.17c0.01-0.02,0.02-0.07,0.01-0.09c-0.03-0.05-0.07-0.1-0.12-0.14c-0.94-0.94-1.89-1.89-2.83-2.83  c-0.04-0.04-0.09-0.08-0.14-0.12c-0.03-0.02-0.1-0.03-0.13,0c-0.1,0.1-0.2,0.19-0.3,0.29c-0.95,0.95-1.91,1.91-2.86,2.86  c-2.29,2.29-4.58,4.58-6.87,6.88c-0.1,0.1-0.19,0.2-0.29,0.3c-0.04,0.04-0.04,0.12,0.01,0.17c0.11,0.11,0.22,0.22,0.32,0.33  c2.37,2.37,4.74,4.74,7.1,7.11c0.84,0.84,1.69,1.69,2.53,2.54c0.11,0.11,0.22,0.22,0.33,0.32c0.05,0.05,0.12,0.05,0.17,0.01  c0.11-0.11,0.23-0.21,0.34-0.32c2.51-2.51,5.02-5.02,7.53-7.53c0.42-0.42,0.32-0.41,0.73,0.01c2.51,2.51,5.02,5.02,7.53,7.53  c0.09,0.09,0.17,0.18,0.26,0.26c0.03,0.03,0.07,0.06,0.11,0.08c0.02,0.01,0.07,0.01,0.08-0.01c0.1-0.09,0.21-0.19,0.31-0.28  c3.26-3.26,6.51-6.51,9.77-9.77c0.07-0.07,0.13-0.13,0.2-0.2c0.15-0.16,0.15-0.18,0-0.34c-0.08-0.08-0.15-0.15-0.23-0.23  c-3.21-3.21-6.42-6.43-9.64-9.64c-0.09-0.09-0.18-0.18-0.26-0.26c-0.03-0.03-0.07-0.06-0.1-0.09c-0.05-0.04-0.12-0.05-0.17-0.01  c-0.1,0.1-0.2,0.19-0.3,0.29c-0.73,0.73-1.47,1.47-2.2,2.21c-0.2,0.2-0.41,0.37-0.57,0.61c-0.03,0.05,0.01,0.08,0.58,0.65  c2.08,2.08,4.17,4.17,6.25,6.25c0.11,0.11,0.21,0.22,0.32,0.34c0.03,0.03,0.02,0.1,0,0.13c-0.04,0.05-0.08,0.09-0.13,0.14  c-1.22,1.22-2.43,2.44-3.65,3.65c-0.02,0.02-0.04,0.04-0.07,0.06c-0.12,0.11-0.17,0.11-0.27,0.02c-0.06-0.05-0.11-0.11-0.17-0.16  c-1.82-1.82-3.64-3.64-5.46-5.46c-0.28-0.28-0.27-0.22-0.27-0.65c0-0.02,0-0.03,0-0.05c0-3.33,0-6.67,0-10  c0-0.49-0.04-0.39,0.3-0.73c1.76-1.77,3.53-3.53,5.29-5.3c0.38-0.38,0.24-0.33,0.81-0.33c3.29,0,6.58,0,9.86,0  c0.58,0,0.43-0.06,0.84,0.35c1.51,1.51,3.02,3.03,4.54,4.54c0.28,0.29,0.57,0.57,0.86,0.86c0.07,0.07,0.13,0.13,0.19,0.2  c0.03,0.04,0.04,0.09,0.01,0.13c-0.04,0.05-0.08,0.1-0.12,0.14c-1.23,1.23-2.46,2.46-3.68,3.68c-0.04,0.04-0.09,0.09-0.14,0.12  c-0.02,0.01-0.07,0.01-0.09,0c-0.07-0.06-0.14-0.12-0.21-0.18c-0.84-0.84-1.69-1.69-2.53-2.53c-1.4-1.4-2.81-2.81-4.21-4.21  c-0.08-0.08-0.16-0.15-0.24-0.22c-0.02-0.01-0.06-0.02-0.08-0.01c-0.07,0.06-0.14,0.12-0.21,0.18c-0.84,0.84-1.69,1.68-2.53,2.54  c-0.5,0.5-0.51,0.36,0.01,0.87c2.54,2.55,5.09,5.09,7.63,7.64c0.72,0.72,1.45,1.45,2.17,2.17c0.07,0.07,0.14,0.13,0.21,0.18  c0.02,0.01,0.07,0.01,0.08,0c0.09-0.08,0.19-0.16,0.27-0.25c3.28-3.28,6.56-6.56,9.83-9.84c0.08-0.08,0.15-0.15,0.23-0.23  C64.75,41.62,64.75,41.56,64.69,41.49z M37.24,33.39c-0.04,0.05-0.09,0.09-0.13,0.13c-1.18,1.18-2.37,2.37-3.55,3.55  c-0.05,0.05-0.11,0.11-0.17,0.16c-0.02,0.02-0.06,0.02-0.08,0.03c-0.03-0.01-0.06-0.02-0.08-0.03c-0.07-0.06-0.14-0.13-0.2-0.19  c-1.16-1.16-2.32-2.32-3.49-3.49c-0.07-0.07-0.13-0.13-0.19-0.2c-0.03-0.03-0.03-0.1,0-0.13c0.04-0.05,0.08-0.09,0.12-0.14  c1.22-1.22,2.43-2.44,3.65-3.65c0.04-0.04,0.09-0.08,0.14-0.12c0.03-0.03,0.1-0.03,0.13,0c0.07,0.06,0.14,0.13,0.2,0.19  c1.17,1.17,2.35,2.35,3.52,3.52c0.04,0.04,0.09,0.09,0.13,0.13C37.31,33.24,37.31,33.31,37.24,33.39z"
                    />
                </svg>
            </div>

            {!hideLabel && (
                <motion.span
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    className="font-bold text-brand dark:text-white whitespace-pre text-3xl ms-4"
                >
                    {t('step')}
                </motion.span>
            )}
        </a>
    );
};
export const LogoIcon = () => {
    return (
        <Link
            href="/"
            className="font-normal flex space-x-2 items-center text-sm text-black py-1 relative z-20 "
        >
            <svg
                className="h-5 w-6 "
                version="1.1"
                id="Layer_1"
                xmlns="http://www.w3.org/2000/svg"
                xmlnsXlink="http://www.w3.org/1999/xlink"
                x="0px"
                y="0px"
                viewBox="0 0 66.55 66.55"
                xmlSpace="preserve"
            >
                <style
                    type="text/css"
                    dangerouslySetInnerHTML={{
                        __html: '\n\t.st0{fill:#00adbb;}\n',
                    }}
                />
                <path
                    className="st0"
                    d="M64.69,41.49c-0.11-0.11-0.22-0.22-0.33-0.33c-2.49-2.49-4.98-4.98-7.47-7.47c-0.1-0.1-0.2-0.2-0.29-0.3  c-0.08-0.08-0.07-0.15,0.01-0.24c0.09-0.09,0.17-0.18,0.26-0.26c2.05-2.05,4.1-4.1,6.15-6.15c0.52-0.52,1.03-1.03,1.54-1.55  c0.05-0.05,0.11-0.11,0.15-0.18c0.01-0.02,0.01-0.07,0-0.09c-0.09-0.11-0.18-0.21-0.28-0.31c-1.69-1.69-3.38-3.38-5.06-5.07  c-1.58-1.58-3.16-3.16-4.74-4.74c-0.09-0.09-0.18-0.17-0.27-0.25c-0.03-0.03-0.09-0.04-0.13,0c-0.09,0.08-0.18,0.17-0.27,0.25  c-0.61,0.61-1.22,1.23-1.84,1.85c-2.62,2.62-5.24,5.24-7.86,7.86c-0.1,0.1-0.2,0.2-0.29,0.3c-0.12,0.12-0.12,0.17,0.02,0.31  c0.01,0.01,0.02,0.02,0.03,0.03c0.94,0.94,1.89,1.89,2.83,2.83c0.04,0.04,0.09,0.08,0.14,0.12c0.02,0.01,0.07,0.01,0.08,0  c0.12-0.1,0.23-0.21,0.34-0.31c2.16-2.16,4.32-4.32,6.48-6.48c0.1-0.1,0.2-0.2,0.3-0.29c0.08-0.08,0.15-0.07,0.24,0.01  c0.06,0.05,0.11,0.11,0.17,0.16c1.17,1.17,2.35,2.35,3.52,3.52c0.07,0.07,0.13,0.14,0.18,0.21c0.01,0.02,0.01,0.07,0,0.09  c-0.04,0.06-0.1,0.12-0.15,0.18c-0.36,0.36-0.72,0.72-1.09,1.09c-1.49,1.49-2.98,2.98-4.47,4.47c-0.3,0.3-0.24,0.26-0.6,0.26  c-3.38,0-6.76,0-10.14,0c-0.06,0-0.12,0-0.19,0c-0.08,0-0.15-0.02-0.21-0.08c-0.06-0.05-0.11-0.11-0.17-0.16  c-1.81-1.81-3.62-3.62-5.43-5.43c-0.28-0.28-0.26-0.21-0.26-0.65c0-1.67,0-3.35,0-5.02c0-1.05,0-2.11,0-3.16c0-0.68,0-1.36,0-2.05  c0-0.17,0.04-0.3,0.17-0.41c0.06-0.05,0.11-0.11,0.17-0.16c1.78-1.78,3.55-3.55,5.33-5.33c0.08-0.08,0.15-0.15,0.23-0.23  c0.02-0.02,0.05-0.04,0.07-0.06c0.03-0.02,0.1-0.02,0.13,0.01c0.27,0.26,0.53,0.52,0.8,0.78c0.95,0.95,1.91,1.91,2.86,2.86  c0.09,0.09,0.17,0.18,0.26,0.27c0.05,0.05,0.04,0.11-0.01,0.16c-0.1,0.1-0.19,0.2-0.29,0.3c-2.14,2.14-4.28,4.28-6.41,6.41  c-0.1,0.1-0.2,0.2-0.3,0.3c-0.03,0.03-0.06,0.07-0.09,0.1c-0.04,0.05-0.04,0.11,0.01,0.16c0.07,0.08,0.15,0.16,0.23,0.23  c0.84,0.84,1.69,1.69,2.53,2.53c0.11,0.11,0.2,0.24,0.34,0.31c0.17-0.06,0.26-0.21,0.38-0.32c3.04-3.04,6.08-6.07,9.11-9.11  c0.27-0.27,0.55-0.55,0.82-0.82c0.04-0.04,0.09-0.09,0.12-0.14c0.01-0.02,0.01-0.07-0.01-0.08c-0.1-0.12-0.21-0.23-0.32-0.34  c-3.23-3.24-6.47-6.47-9.7-9.7c-0.09-0.09-0.17-0.18-0.26-0.26c-0.11-0.11-0.16-0.11-0.27,0c-0.1,0.1-0.2,0.2-0.3,0.29  c-2.48,2.48-4.96,4.96-7.43,7.44c-0.11,0.11-0.22,0.22-0.33,0.33c-0.06,0.06-0.15,0.07-0.21,0.01c-0.11-0.11-0.22-0.22-0.33-0.33  c-2.49-2.49-4.98-4.98-7.47-7.47c-0.1-0.1-0.2-0.2-0.3-0.29c-0.02-0.02-0.05-0.04-0.08-0.05c-0.03-0.01-0.07-0.01-0.09,0.01  c-0.09,0.08-0.19,0.16-0.27,0.25c-3.28,3.28-6.56,6.56-9.84,9.84c-0.37,0.37-0.35,0.31,0.01,0.67c3.28,3.28,6.56,6.56,9.83,9.84  c0.08,0.08,0.16,0.15,0.23,0.23c0.03,0.03,0.1,0.03,0.13,0.01c0.05-0.04,0.1-0.08,0.14-0.12c0.94-0.94,1.89-1.89,2.83-2.83  c0.04-0.04,0.09-0.09,0.12-0.14c0.01-0.02,0.02-0.06,0.01-0.08c-0.04-0.06-0.09-0.12-0.15-0.18c-0.4-0.41-0.81-0.81-1.22-1.22  c-1.82-1.82-3.63-3.63-5.45-5.45c-0.11-0.11-0.21-0.22-0.32-0.34c-0.04-0.04-0.02-0.09,0-0.13c0.06-0.07,0.12-0.14,0.19-0.21  c1.18-1.18,2.37-2.37,3.55-3.55c0.05-0.05,0.11-0.11,0.17-0.16c0.03-0.03,0.1-0.03,0.13-0.01c0.06,0.05,0.12,0.1,0.17,0.15  c1.86,1.86,3.73,3.73,5.59,5.59c0.04,0.04,0.09,0.09,0.13,0.13c0.05,0.06,0.09,0.12,0.09,0.21c0,0.08,0,0.16,0,0.23  c0,3.38,0,6.76,0,10.14c0,0.33,0.03,0.31-0.23,0.57c-0.03,0.03-0.07,0.07-0.1,0.1c-1.77,1.77-3.53,3.53-5.3,5.3  c-0.39,0.39-0.26,0.32-0.81,0.32c-3.3,0-6.61,0-9.91,0c-0.53,0-0.4,0.06-0.8-0.34c-1.79-1.79-3.57-3.58-5.36-5.36  c-0.08-0.08-0.15-0.15-0.23-0.23c-0.06-0.06-0.06-0.14,0-0.21c0.04-0.05,0.08-0.09,0.13-0.13c1.19-1.2,2.39-2.39,3.58-3.59  c0.05-0.05,0.11-0.11,0.17-0.16c0.04-0.04,0.09-0.03,0.13-0.01c0.06,0.04,0.12,0.1,0.17,0.15c0.37,0.37,0.75,0.75,1.12,1.12  c1.87,1.88,3.75,3.75,5.62,5.63c0.08,0.08,0.16,0.15,0.24,0.22c0.03,0.03,0.1,0.03,0.13,0c0.05-0.04,0.09-0.08,0.14-0.12  c0.93-0.93,1.86-1.86,2.8-2.8c0.02-0.02,0.04-0.04,0.07-0.07c0.11-0.12,0.12-0.17,0.02-0.27c-0.1-0.1-0.2-0.2-0.29-0.3  c-2.27-2.27-4.54-4.54-6.81-6.81c-1.02-1.02-2.04-2.04-3.06-3.06c-0.18-0.18-0.21-0.18-0.38-0.02c-0.09,0.09-0.18,0.17-0.26,0.26  c-2.11,2.12-4.23,4.24-6.34,6.35c-1.11,1.11-2.21,2.22-3.32,3.32c-0.09,0.09-0.17,0.18-0.26,0.27c-0.06,0.06-0.06,0.15-0.01,0.21  c0.11,0.11,0.22,0.22,0.33,0.33c2.49,2.49,4.98,4.98,7.47,7.47c0.09,0.09,0.18,0.17,0.26,0.26c0.11,0.12,0.12,0.17,0.02,0.27  c-0.05,0.06-0.11,0.11-0.16,0.17c-0.73,0.73-1.47,1.47-2.2,2.2c-1.82,1.82-3.64,3.64-5.46,5.46c-0.09,0.09-0.17,0.18-0.26,0.27  c-0.05,0.05-0.05,0.12-0.01,0.16c0.07,0.08,0.15,0.16,0.22,0.23c3.29,3.29,6.58,6.58,9.87,9.87c0.08,0.08,0.16,0.15,0.23,0.23  c0.04,0.04,0.12,0.04,0.17-0.01c0.11-0.11,0.22-0.22,0.33-0.33c3.22-3.22,6.45-6.45,9.67-9.67c0.08-0.08,0.15-0.15,0.23-0.23  c0.03-0.03,0.06-0.07,0.09-0.11c0.03-0.03,0.03-0.1,0-0.13c-0.05-0.06-0.1-0.12-0.16-0.17c-0.9-0.9-1.8-1.8-2.7-2.7  c-0.05-0.05-0.11-0.11-0.17-0.16c-0.06-0.06-0.15-0.06-0.21-0.01c-0.11,0.11-0.22,0.22-0.33,0.33c-2.15,2.15-4.3,4.3-6.45,6.45  c-0.11,0.11-0.22,0.22-0.34,0.32c-0.03,0.03-0.1,0.03-0.13,0c-0.08-0.07-0.16-0.15-0.24-0.22c-1.15-1.15-2.3-2.3-3.45-3.45  c-0.07-0.07-0.13-0.13-0.2-0.2c-0.02-0.02-0.04-0.05-0.05-0.08c-0.01-0.03-0.01-0.07,0.01-0.08c0.09-0.11,0.18-0.21,0.28-0.31  c1.18-1.19,2.37-2.37,3.55-3.55c0.65-0.65,1.3-1.29,1.94-1.94c0.12-0.12,0.24-0.19,0.41-0.17c0.09,0.01,0.19,0,0.28,0  c3.29,0,6.58,0,9.86,0c0.11,0,0.22,0,0.33,0c0.13,0,0.24,0.03,0.33,0.13c0.07,0.08,0.15,0.15,0.23,0.23  c1.74,1.74,3.49,3.49,5.23,5.23c0.07,0.07,0.13,0.13,0.2,0.2c0.09,0.09,0.15,0.19,0.14,0.33c-0.01,0.08,0,0.15,0,0.23  c0,3.33,0,6.67,0,10c0,0.09,0,0.19,0,0.28c0,0.08-0.04,0.15-0.09,0.21c-0.09,0.1-0.19,0.2-0.29,0.3c-1.29,1.29-2.59,2.59-3.88,3.88  c-0.47,0.47-0.94,0.94-1.41,1.41c-0.09,0.09-0.18,0.17-0.27,0.26c-0.05,0.04-0.13,0.05-0.17,0.01c-0.09-0.08-0.18-0.17-0.27-0.26  c-1.12-1.12-2.24-2.24-3.36-3.36c-0.41-0.41-0.41-0.32,0.01-0.74c1.81-1.81,3.62-3.62,5.43-5.43c0.42-0.42,0.83-0.83,1.25-1.25  c0.05-0.05,0.11-0.11,0.15-0.17c0.01-0.02,0.02-0.07,0.01-0.09c-0.03-0.05-0.07-0.1-0.12-0.14c-0.94-0.94-1.89-1.89-2.83-2.83  c-0.04-0.04-0.09-0.08-0.14-0.12c-0.03-0.02-0.1-0.03-0.13,0c-0.1,0.1-0.2,0.19-0.3,0.29c-0.95,0.95-1.91,1.91-2.86,2.86  c-2.29,2.29-4.58,4.58-6.87,6.88c-0.1,0.1-0.19,0.2-0.29,0.3c-0.04,0.04-0.04,0.12,0.01,0.17c0.11,0.11,0.22,0.22,0.32,0.33  c2.37,2.37,4.74,4.74,7.1,7.11c0.84,0.84,1.69,1.69,2.53,2.54c0.11,0.11,0.22,0.22,0.33,0.32c0.05,0.05,0.12,0.05,0.17,0.01  c0.11-0.11,0.23-0.21,0.34-0.32c2.51-2.51,5.02-5.02,7.53-7.53c0.42-0.42,0.32-0.41,0.73,0.01c2.51,2.51,5.02,5.02,7.53,7.53  c0.09,0.09,0.17,0.18,0.26,0.26c0.03,0.03,0.07,0.06,0.11,0.08c0.02,0.01,0.07,0.01,0.08-0.01c0.1-0.09,0.21-0.19,0.31-0.28  c3.26-3.26,6.51-6.51,9.77-9.77c0.07-0.07,0.13-0.13,0.2-0.2c0.15-0.16,0.15-0.18,0-0.34c-0.08-0.08-0.15-0.15-0.23-0.23  c-3.21-3.21-6.42-6.43-9.64-9.64c-0.09-0.09-0.18-0.18-0.26-0.26c-0.03-0.03-0.07-0.06-0.1-0.09c-0.05-0.04-0.12-0.05-0.17-0.01  c-0.1,0.1-0.2,0.19-0.3,0.29c-0.73,0.73-1.47,1.47-2.2,2.21c-0.2,0.2-0.41,0.37-0.57,0.61c-0.03,0.05,0.01,0.08,0.58,0.65  c2.08,2.08,4.17,4.17,6.25,6.25c0.11,0.11,0.21,0.22,0.32,0.34c0.03,0.03,0.02,0.1,0,0.13c-0.04,0.05-0.08,0.09-0.13,0.14  c-1.22,1.22-2.43,2.44-3.65,3.65c-0.02,0.02-0.04,0.04-0.07,0.06c-0.12,0.11-0.17,0.11-0.27,0.02c-0.06-0.05-0.11-0.11-0.17-0.16  c-1.82-1.82-3.64-3.64-5.46-5.46c-0.28-0.28-0.27-0.22-0.27-0.65c0-0.02,0-0.03,0-0.05c0-3.33,0-6.67,0-10  c0-0.49-0.04-0.39,0.3-0.73c1.76-1.77,3.53-3.53,5.29-5.3c0.38-0.38,0.24-0.33,0.81-0.33c3.29,0,6.58,0,9.86,0  c0.58,0,0.43-0.06,0.84,0.35c1.51,1.51,3.02,3.03,4.54,4.54c0.28,0.29,0.57,0.57,0.86,0.86c0.07,0.07,0.13,0.13,0.19,0.2  c0.03,0.04,0.04,0.09,0.01,0.13c-0.04,0.05-0.08,0.1-0.12,0.14c-1.23,1.23-2.46,2.46-3.68,3.68c-0.04,0.04-0.09,0.09-0.14,0.12  c-0.02,0.01-0.07,0.01-0.09,0c-0.07-0.06-0.14-0.12-0.21-0.18c-0.84-0.84-1.69-1.69-2.53-2.53c-1.4-1.4-2.81-2.81-4.21-4.21  c-0.08-0.08-0.16-0.15-0.24-0.22c-0.02-0.01-0.06-0.02-0.08-0.01c-0.07,0.06-0.14,0.12-0.21,0.18c-0.84,0.84-1.69,1.68-2.53,2.54  c-0.5,0.5-0.51,0.36,0.01,0.87c2.54,2.55,5.09,5.09,7.63,7.64c0.72,0.72,1.45,1.45,2.17,2.17c0.07,0.07,0.14,0.13,0.21,0.18  c0.02,0.01,0.07,0.01,0.08,0c0.09-0.08,0.19-0.16,0.27-0.25c3.28-3.28,6.56-6.56,9.83-9.84c0.08-0.08,0.15-0.15,0.23-0.23  C64.75,41.62,64.75,41.56,64.69,41.49z M37.24,33.39c-0.04,0.05-0.09,0.09-0.13,0.13c-1.18,1.18-2.37,2.37-3.55,3.55  c-0.05,0.05-0.11,0.11-0.17,0.16c-0.02,0.02-0.06,0.02-0.08,0.03c-0.03-0.01-0.06-0.02-0.08-0.03c-0.07-0.06-0.14-0.13-0.2-0.19  c-1.16-1.16-2.32-2.32-3.49-3.49c-0.07-0.07-0.13-0.13-0.19-0.2c-0.03-0.03-0.03-0.1,0-0.13c0.04-0.05,0.08-0.09,0.12-0.14  c1.22-1.22,2.43-2.44,3.65-3.65c0.04-0.04,0.09-0.08,0.14-0.12c0.03-0.03,0.1-0.03,0.13,0c0.07,0.06,0.14,0.13,0.2,0.19  c1.17,1.17,2.35,2.35,3.52,3.52c0.04,0.04,0.09,0.09,0.13,0.13C37.31,33.24,37.31,33.31,37.24,33.39z"
                />
            </svg>
            {/* <div className="h-5 w-6 bg-black dark:bg-white rounded-br-lg rounded-tr-sm rounded-tl-lg rounded-bl-sm flex-shrink-0" /> */}
        </Link>
    );
};

// Dummy dashboard component with content
const Dashboard = ({ children }) => {
    const { i18n } = useTranslation();

    return (
        <div className="flex-1 w-full min-h-screen md:max-w-[calc(100vw-250px)]">
            <Navbar />
            <div
                className={`overflow-x-auto overflow-y-auto w-full bg-neutral-100 border border-neutral-200 dark:border-neutral-700  dark:bg-neutral-900 h-[calc(100vh-42px)] ${i18n.dir() == 'rtl' ? 'rounded-tr-2xl' : 'rounded-tl-2xl'}`}
            >
                <Breadcrumb />

                <div className="p-2 md:p-4  flex flex-col gap-2 flex-1 w-full h-[calc(100vh-96px)] overflow-auto">
                    {children}
                </div>
            </div>
        </div>
    );
};
const Breadcrumb = () => {
    const { t } = useTranslation();
    const { url } = usePage(); // Get the current URL
    const pathnames = url
        .split('?')[0]
        .split('/')
        .filter(x => x && isNaN(x)); // Split URL into segments and remove parameters

    return (
        <nav
            className="bg-white flex px-5 py-2 text-gray-700 dark:bg-gray-800 dark:border-gray-700"
            aria-label="Breadcrumb"
        >
            <ol className="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse">
                {/* Home Link */}
                <li className="inline-flex items-center">
                    <Link
                        href="/"
                        className="inline-flex items-center text-sm font-medium text-gray-700 hover:text-brand dark:text-gray-400 dark:hover:text-white"
                    >
                        <svg
                            className="w-3 h-3 me-2.5"
                            aria-hidden="true"
                            xmlns="http://www.w3.org/2000/svg"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                        >
                            <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z" />
                        </svg>
                        {t('home')}
                    </Link>
                </li>

                {/* Dynamic Breadcrumb Links */}
                {pathnames.map((value, index) => {
                    if (value === 'admin') return null; // Skip 'admin' segment

                    const to = `/${pathnames.slice(0, index + 1).join('/')}`; // Build the path
                    const isLast = index === pathnames.length - 1; // Check if it's the last segment

                    return (
                        <li key={index}>
                            <div className="flex items-center">
                                {/* Arrow Icon */}
                                <svg
                                    className="rtl:rotate-180 block w-3 h-3 mx-1 text-gray-400"
                                    aria-hidden="true"
                                    xmlns="http://www.w3.org/2000/svg"
                                    fill="none"
                                    viewBox="0 0 6 10"
                                >
                                    <path
                                        stroke="currentColor"
                                        strokeLinecap="round"
                                        strokeLinejoin="round"
                                        strokeWidth={2}
                                        d="m1 9 4-4-4-4"
                                    />
                                </svg>
                                {isLast ? (
                                    // Current page (no link)
                                    <span className="ms-1 text-sm font-medium text-gray-500 md:ms-2 dark:text-gray-400">
                                        {t(value)}
                                    </span>
                                ) : (
                                    // Intermediate breadcrumb (with link)
                                    <Link
                                        href={to}
                                        className="ms-1 text-sm font-medium text-gray-700 hover:text-brand md:ms-2 dark:text-gray-400 dark:hover:text-white"
                                    >
                                        {t(value)}
                                    </Link>
                                )}
                            </div>
                        </li>
                    );
                })}
            </ol>
        </nav>
    );
};

const SideLinks = ({ tables }) => {
    const [expanded, setExpanded] = useState({});

    const toggleExpand = table => {
        setExpanded(prev => ({ ...prev, [table]: !prev[table] }));
    };

    return (
        <div>
            <ul>
                {tables.map((table, index) => (
                    <li key={index} className="group">
                        <button
                            className=" px-4 py-2 text-left focus:outline-none"
                            onClick={() => toggleExpand(table)}
                        >
                            {table.charAt(0).toUpperCase() +
                                table.slice(1).replace('_', ' ')}
                        </button>
                        {expanded[table] && (
                            <ul className="pl-8">
                                <li>
                                    <Link
                                        to={`/${table}`}
                                        className="hover:underline"
                                    >
                                        View All
                                    </Link>
                                </li>
                                <li>
                                    <Link
                                        to={`/${table}/create`}
                                        className="hover:underline"
                                    >
                                        Add New
                                    </Link>
                                </li>
                            </ul>
                        )}
                    </li>
                ))}
            </ul>
        </div>
    );
};
